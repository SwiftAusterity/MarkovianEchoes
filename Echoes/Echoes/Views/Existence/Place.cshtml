@model Echoes.Web.Models.ExistenceModel

@{
    ViewData["Title"] = "EXIST";
    Layout = "~/Pages/_Layout.cshtml";
    var newRecords = Model.NewToYou;
}

<div class="parserClientLeft">
    <div>
        <h3>@Model.CurrentPlace.Name</h3>
        <div>
            <p>@String.Join(" ", Model.CurrentPlace.RenderToLook())</p>
        </div>
        <div>
            @foreach (var thing in Model.CurrentPlace.ThingInventory)
            {
                <p>@String.Join(" ", thing.RenderToLocation())</p>
            }
        </div>
    </div>
</div>
<div class="parserClientRight">
    <div>
        <h3>Whomst</h3>
        <div>
            @foreach (var persona in Model.CurrentPlace.GetPersonas())
            {
                <p>@String.Join(" ", persona.RenderToLocation())</p>
            }
        </div>
    </div>
</div>
<div class="textParserClient">
    <div id="OutputArea" class="parserOutput"></div>
    <form method="post" id="inputForm" name="inputForm">
        <input type="text" id="Input" name="Input" class="parserInput" />
    </form>
</div>
<div id="parserControls">
    <a href="#" id="switchAct"><img src="~/images/hatch_tap.svg" title="Act" /></a>
    <a href="#" id="switchSpeech"><img src="~/images/hatch_broadcast.svg" title="Speak" /></a>
    <a href="#" id="clientReload" style="float: right;"><img src="~/images/hatch_hide.svg" title="Blink" /></a>
</div>

@section Scripts {
    <script type="text/javascript">
        $('#existLink').addClass('selected');

        if (Cookies.get('modality') != undefined && Cookies.get('modality') == 'speak') {
            $('#switchSpeech').addClass('selected');
            $('#switchAct').removeClass('selected');
       } else {
            $('#switchAct').addClass('selected');
            $('#switchSpeech').removeClass('selected');
            setMode(true);
        }

        Tutorial($('#switchAct'), 'Choose to speak or act.');
        Tutorial($('#clientReload'), "Blink to see what you've missed.");
        Tutorial($('#Input'), "Do or say something.");
        Tutorial($('.parserClientRight'), "Who has been here.");
        Tutorial($('.parserClientLeft'), "Here is where.");

        Kinesis_Text('@Model.Errors', $('.parserOutput'), { FadeOnSweep: true }, { 'color': 'red' }, { in: { effect: 'fadeIn' } });

        var timer = 0;
       @foreach (var record in Model.NewToYou)
       {
           var outputText = record.Spoken ? String.Format("{0} says \"{1}\"", record.Actor.Name, record.Observance) : String.Format("{0} {1}", record.Actor.Name, record.Observance);

          <text>
            Kinesis_Text('@outputText', $('.parserOutput'), { Orientation: { direction: 'random', FadeOnSweep: true } }, undefined, { initialDelay: timer });
            timer += 1250;
          </text>
       }

        $('#switchAct').click(function () {
            setMode(true);

            $('#switchAct').addClass('selected');
            $('#switchSpeech').removeClass('selected');

            return false;
        });

        $('#switchSpeech').click(function () {
            setMode(false);

            $('#switchSpeech').addClass('selected');
            $('#switchAct').removeClass('selected');

            return false;
        });

        $('#inputForm').submit(function () {
            //Ensure we have value
            if ($('#Input').val() == '') {
                return false;
            }

            setAkashicDate();
        });

        $('#clientReload').click(function () {
            window.location = window.location.href;
            return false;
        });
    </script>
}